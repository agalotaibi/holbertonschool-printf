.TH PRINTF 3 "10-1-2025" "1.0" "Library Function Manual"

.SH NAME
_printf \- custom implementation of the standard printf function

.SH SYNOPSIS
#include "main.h"
.br
int _printf(const char *format, ...);

.SH DESCRIPTION
The
.B _printf
function is a simulation of the standard C library function
.BR printf (3).
It produces formatted output to the standard output stream (stdout).
.PP
The format string is composed of zero or more directives: ordinary characters,
which are copied unchanged to the output stream, and conversion specifications,
each beginning with the '%' character and followed by a specifier.

.SH OPTIONS
The following conversion specifiers are supported:

.TP
.B %c
Prints a single character.

.TP
.B %s
Prints a string of characters.

.TP
.B %d, %i
Prints a signed decimal integer.

.TP
.B %u
Prints an unsigned decimal integer.

.TP
.B %o
Prints an unsigned integer in octal notation.

.TP
.B %x
Prints an unsigned integer in lowercase hexadecimal notation.

.TP
.B %X
Prints an unsigned integer in uppercase hexadecimal notation.

.TP
.B %%
Writes a literal '%' character (no argument is consumed).

.TP
.B %b
(Optional) Prints an unsigned integer as a binary number (base 2).

.SH RETURN VALUE
Upon successful return, the function returns the number of characters printed
(excluding the terminating null byte). If an output error is encountered,
a negative value is returned.

.SH EXAMPLES
.nf
_printf("Hello %s\\n", "world");
// Output: Hello world

_printf("Value: %d\\n", 42);
// Output: Value: 42

_printf("Unsigned: %u\\n", 300);
// Output: Unsigned: 300

_printf("Octal: %o\\n", 64);
// Output: Octal: 100

_printf("Hex lower: %x\\n", 255);
// Output: Hex lower: ff

_printf("Hex upper: %X\\n", 255);
// Output: Hex upper: FF

_printf("Percent: %%\\n");
// Output: %
.fi

.SH AUTHORS
Written by Amaal AlOtaibi and Shadan Alkharji.